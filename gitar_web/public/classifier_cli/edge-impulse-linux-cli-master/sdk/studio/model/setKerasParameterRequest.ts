/**
 * Edge Impulse API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AugmentationPolicyImageEnum } from './augmentationPolicyImageEnum';
import { AugmentationPolicySpectrogram } from './augmentationPolicySpectrogram';
import { KerasModelTypeEnum } from './kerasModelTypeEnum';
import { KerasVisualLayer } from './kerasVisualLayer';

/**
* Only fields defined in this object are set
*/
export class SetKerasParameterRequest {
    /**
    * Whether to use visual or expert mode.
    */
    'mode'?: SetKerasParameterRequestModeEnum;
    /**
    * Minimum confidence score, if the neural network scores a sample below this threshold it will be flagged as uncertain.
    */
    'minimumConfidenceRating'?: number;
    'selectedModelType'?: KerasModelTypeEnum;
    /**
    * Raw Keras script (only used in expert mode)
    */
    'script'?: string;
    /**
    * The visual layers for the neural network (only in visual mode).
    */
    'visualLayers'?: Array<KerasVisualLayer>;
    /**
    * Number of training cycles (only in visual mode).
    */
    'trainingCycles'?: number;
    /**
    * Learning rate (between 0 and 1) (only in visual mode).
    */
    'learningRate'?: number;
    /**
    * Train/test split (between 0 and 1)
    */
    'trainTestSplit'?: number;
    /**
    * Tuner learning rates (between 0 and 1) (only in visual mode).
    */
    'learningRates'?: Array<number>;
    /**
    * Tuning algorithm to use to search hyperparameter space
    */
    'tuningAlgorithm'?: SetKerasParameterRequestTuningAlgorithmEnum;
    /**
    * Total number of trials (model configurations) to test at most.
    */
    'tuningMaxTrials'?: number;
    /**
    * Number of parallel workers used for tuning
    */
    'tuningWorkers'?: number;
    'augmentationPolicyImage'?: AugmentationPolicyImageEnum;
    'augmentationPolicySpectrogram'?: AugmentationPolicySpectrogram;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "mode",
            "baseName": "mode",
            "type": "SetKerasParameterRequestModeEnum"
        },
        {
            "name": "minimumConfidenceRating",
            "baseName": "minimumConfidenceRating",
            "type": "number"
        },
        {
            "name": "selectedModelType",
            "baseName": "selectedModelType",
            "type": "KerasModelTypeEnum"
        },
        {
            "name": "script",
            "baseName": "script",
            "type": "string"
        },
        {
            "name": "visualLayers",
            "baseName": "visualLayers",
            "type": "Array<KerasVisualLayer>"
        },
        {
            "name": "trainingCycles",
            "baseName": "trainingCycles",
            "type": "number"
        },
        {
            "name": "learningRate",
            "baseName": "learningRate",
            "type": "number"
        },
        {
            "name": "trainTestSplit",
            "baseName": "trainTestSplit",
            "type": "number"
        },
        {
            "name": "learningRates",
            "baseName": "learningRates",
            "type": "Array<number>"
        },
        {
            "name": "tuningAlgorithm",
            "baseName": "tuningAlgorithm",
            "type": "SetKerasParameterRequestTuningAlgorithmEnum"
        },
        {
            "name": "tuningMaxTrials",
            "baseName": "tuningMaxTrials",
            "type": "number"
        },
        {
            "name": "tuningWorkers",
            "baseName": "tuningWorkers",
            "type": "number"
        },
        {
            "name": "augmentationPolicyImage",
            "baseName": "augmentationPolicyImage",
            "type": "AugmentationPolicyImageEnum"
        },
        {
            "name": "augmentationPolicySpectrogram",
            "baseName": "augmentationPolicySpectrogram",
            "type": "AugmentationPolicySpectrogram"
        }    ];

    static getAttributeTypeMap() {
        return SetKerasParameterRequest.attributeTypeMap;
    }
}


export type SetKerasParameterRequestModeEnum = 'expert' | 'visual';
export const SetKerasParameterRequestModeEnumValues: string[] = ['expert', 'visual'];

export type SetKerasParameterRequestTuningAlgorithmEnum = 'random' | 'hyperband' | 'bayesian';
export const SetKerasParameterRequestTuningAlgorithmEnumValues: string[] = ['random', 'hyperband', 'bayesian'];
